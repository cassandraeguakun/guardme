1. Mark a freelancer as  favourite
---------------------------------------------
				

			Api:  api/toggle/favourite/{freelancer_id}  
			Type: POST
			Requirements : Authorization ,  freelancer_id,  ===== freelancer user id fron USERS Table
			Respose:  
					{
						'Freelancer removed from favourite list'
					}
					
					------OR----
					
					{
					    'Freelancer added to favourite list'
					}
				
2. Retrive all favourite freelancer list
---------------------------------------------
				

			Api:  api/favourite/freelancers 
			Type: GET
			Requirements : Authorization ,  
			Respose:  
					[
						{
							"id": 19,
							"name": "chukwunye",
							"email": "cokwedadi@gmail.com",
							"gender": "",
							"phone": "560054",
							"photo": "1527266852.jpg",
							"firstname": "Cassy",
							"lastname": "Andrews"
						}
					]			
				
				
				
				                            ++++++++++++++++++++++++++   Team Api +++++++++++++++++++++++++++++
1. Creating Team
---------------------------------------------
				

			Api:  api/team/create   
			Type: POST
			Requirements : Authorization ,
			Request payload:                    
									name,  ===== name of the team
									description  ==== description of the team
			Respose:  
					{
						'Team Created Successfully'
					}
					

2. Retriving all Team name and ID
---------------------------------------------
				

			Api:  api/get/teams   
			Type: GET
			Requirements : Authorization ,
			Respose:  
					[
						{
							"id": 1,                           <<<----   id ==team_id which is used by  (5. Adding member to Team) api
							"name": "tedh",
							"description": "dgdg",
							"created_by": "21",
							"created_at": "2018-06-09 09:16:05",
							"updated_at": "2018-06-09 09:16:05"
						}
					]
										
					
					
3. Adding member to Team
---------------------------------------------
				

			Api:  api/team/add/member   
			Type: POST
			Requirements : Authorization ,
			Request payload:                    
									freelancer_id,  ===== as well as user id from users TABLE
									team_id  ==== description of the team
			Respose:  
						status: 500
					{
						'This member is already part of the team'
					}	
					
				    ----- OR ------
				        
						status: 200
					{
						'Member added successfully'
					}					