1. Job applications for a particular job
---------------------------------------------------------
		Api:  api/job/{id}/applications/list   
		Type: GET
		Requirements : Authorization , {id}= Job id
		Respose:  
			        [
						{
							"id":"1"
							"name": "chukwunye",
							"photo": "1527266852.jpg",
							"created_at": "2018-05-25 17:19:21",
							"is_hired": 1,
							"application_description": "I want the job"
						},
						{
							"id":"2"
							"name": "seller",
							"photo": "1497510195.jpg",
							"created_at": "2018-05-25 17:20:14",
							"is_hired": 0,
							"application_description": "want job too"
						}
					]
					
		
		
2.Save job ( or favourite job)  List.
--------------------------------------------------------------		
		Api:  api/freelancer/saved/job/list   
		Type: GET
		Requirements : Authorization , id= job id
		Respose:  
					[
						{
						"id": 1,
						"title": "Asf asdce edceecd"
						}
					]

3.Save job ( or favourite job)  Button. 
----------------------------------------------
		Api:  api/freelancer/save/job/{id}   
		Type: POST
		Requirements : Authorization ,
		Respose:  
				{
					"200": "saved"
				}
	
4.Job Transactions list
   a.Wallet amount/balance
   b.List of jobs with job id, title, total amounts, payment date
------------------------------------------------------------------------

				Api:  api/freelancer/saved/job/list   
		        Type: GET
				Requirements : Authorization , id= job id
				Respose:  
					[
						{
						"id": 1,
						"title": "Asf asdce edceecd"
						}
					]	
					
5.Jobs awarded (if user is freelancer)
	a.List of jobs with id, title, date awarded, amount of job
---------------------------------------------------------------------	
				
					
		Api:  api/freelancer/awarded/jobs 
		Type: GET
		Requirements : Authorization ,user must be an freelancer
		Respose:  
				[
					{
						"job_id": 1,
						"title": "Caja Security",
						"updated_at": "2018-05-25 23:31:55"
					}
				]
					
6.Jobs awarded (if user is employer)
a.List of jobs with id, title, date awarded, amount of job
---------------------------------------------------------------------	
				
					
		Api:  api/employer/awarded/jobs 
		Type: GET
		Requirements : Authorization , user must be an employer
		Respose:  
				[
					{
						"job_id": 1,
						"title": "Caja Security",
						"updated_at": "2018-05-25 23:31:55"
					}
				]			



7.Jobs awarded
Decline award API endpoint needed for freelancer
---------------------------------------------------------------------	
				
					
		Api:  api/freelancer/job/decline/{application_id}
		Type: GET
		Requirements : Authorization , user must be an freelancer
		Respose:  
				{
					"decline": "200"
				}		


8.Jobs awarded
Cancel award API endpoint for employer
---------------------------------------------------------------------	
				
					
		Api:  api/employer/job/decline/{application_id}
		Type: GET
		Requirements : Authorization , user must be an employer
		Respose:  
				{
					"cancel": "200"
				}						
				
				
9.invoice for employer
-----------------------------------------------------------			

		Api:  api/employer/wallet/invoice/{job_id}
		Type: GET
		Requirements : Authorization , user must be an employer
		Respose:  
				{
				"all_transactions": [
				{
				"title": "Admin Fee",
				"id": 10,
				"created_at": "2018-05-26 16:11:16",
				"amount": 161.89,
				"number_of_freelancers": 5,
				"status": "paid",
				"type": "admin_fee"
				},
				{
				"title": "Job Fee",
				"id": 8,
				"created_at": "2018-05-26 16:11:16",
				"amount": 1080,
				"number_of_freelancers": 5,
				"status": "funded",
				"type": "job_fee",
				"user_id": [
				{
				"applied_by": 19
				},
				{
				"applied_by": 23
				}
				]
				},
				{
				"title": "VAT Fee",
				"id": 9,
				"created_at": "2018-05-26 16:11:16",
				"amount": 216,
				"number_of_freelancers": 5,
				"status": "paid",
				"type": "vat_fee"
				}
				],
				"balance": 1457.8899999999999,
				"from": {
				"id": 21,
				"name": "employer",
				"email": "support@cajastudios.com",
				"verified": 0,
				"gender": "male",
				"phone": "9199250413",
				"photo": "",
				"admin": 0,
				"created_at": "2018-05-25 22:54:54",
				"updated_at": "2018-05-25 22:54:54",
				"firstname": "",
				"lastname": "",
				"dob": "",
				"address_id": 0,
				"sia_licence": "",
				"sia_expirydate": "",
				"work_category": 0,
				"nation_id": 0,
				"visa_no": "",
				"niutr_no": "",
				"pass_page": "",
				"visa_page": "",
				"sia_doc": "",
				"address_proof": "",
				"passphoto": "",
				"phone_verified": 0,
				"added": 0,
				"spent": 0,
				"doc_verified": 0,
				"date": {
				"date": "2018-06-01 05:39:37.284923",
				"timezone_type": 3,
				"timezone": "UTC"
				}
				},
				"job_id": "4"
				}
				
10. freelancer withdraw application 
-----------------------------------------------------------			

		Api:  api/freelancer/withdraw/{application_id}
		Type: GET
		Requirements : Authorization , user must be an freelancer
		Respose:  
					{
						"withdraw": "200"
					}		
					
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
					
11. Employer can award a job to the applicant
-----------------------------------------------------------			

		Api:  api/employer/award/job/to/{application_id}
		Type: POST
		Requirements : Authorization , user must be an employer,  application_id=which application he like to haire. 
		Respose:  
						{
							"application_id": "6",
							"user_id": 19
						}	
						
		Explaination of Respose:		user_id = freelancer id , as well as the freelancer user id(in USERS table) ;
		
		

		
		
		
12. Mark job as complete
-----------------------------------------------------------			

		Api:  api/jobs/mark-application-as-complete/{application_id 
		Type: POST
		Requirements : Authorization , user must be an employer,  
		Respose:  
						[
							"success"
						]
						
						
						|
						OR
						|
						
						
						[
							"You are not authorized to perform this action."
						]						
						
		
13. Leave feedback
-----------------------------------------------------------			

		Api:  api/jobs/leave/feedback/{application_id}
		Type: POST
		Requirements : Authorization , user must be an employer, 
		Paramitter Accept: 
							"appearance"=numaric value(0-5) , 
							"punctuality"=numaric value(0-5), 		 
							"customer_focused"==numaric value(0-5) , 
							"security_conscious"=numaric value(0-5) , 
							"feedback_message"= feedback massage in text
		
		Respose:  
						[
							"success"
						]
						
						
						|
						OR
						|
						
						
						[
							"You are not authorized to perform this action."
						]						


14. Average feedback
-----------------------------------------------------------			

		Api:  api/freelancer/average/feedback/{id}
		Type: GET
		Requirements : Authorization , id=freelancer id (user_id)
	
		
		Respose:  
						[
							"rating": 4.5
						]
						
						
						|
						OR
						|
						
						
						{
							"rating": "Not Available"
						}						
																			

15. All Open tickets
-----------------------------------------------------------			

		Api:  api/support/tickets/open
		Type: GET
		Requirements : Authorization , Retrive the authenticate user all open tickets. 
	
		
		Respose:  
						[
							{
								"id": 1,
								"user_id": 21,
								"responsible_id": 0,
								"category_id": 0,
								"title": "jhvv uh o uioh",
								"status": 0,
								"state": 1
							}
						]
												

16. All Open Jobs
-----------------------------------------------------------			

		Api:  api/jobs/open
		Type: GET
		Requirements : Authorization , Retrive the authenticate user open jobs;
	
		
		Respose:  
						[
							{
								"job_id": 4,
								"job_title": "Saturday test job"
							},
							{
								"job_id": 5,
								"job_title": "awerfg WEF4235"
							},
							{
								"job_id": 6,
								"job_title": "asdrfg wsfg"
							}
						]
						
17. All open job applications of freelancer
-----------------------------------------------------------			

		Api:  api/freelancer/open/job/applications
		Type: GET
		Requirements : Authorization , Retrive the authenticate user open jobs;
	
		
		Respose:  
						[
							{
								"job_id": 4,
								"job_title": "Saturday test job",
								"completion_status": 0
							}
	
					]		

18. All freelancers awarded open jobs of an employer
-----------------------------------------------------------			

		Api:  api/employer/open/awarded/jobs
		Type: GET
		Requirements : Authorization , Retrive all awarded open jobs of an employer
	
		
		Respose:  
						[
							{
								"application_id": 6,
								"job_id": 4,
								"job_title": "Saturday test job"
							}
						]										